// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "sqlite"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         Int              @id @default(autoincrement())
  email      String           @unique
  credits    Int              @default(10)
  settings   UserSettings?
  privacy    UserPrivacy?
  experience UserExperience[]
}

model UserSettings {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique @map("user_id")

  // Profile information
  age      Int
  sex      String?
  location String?
  phone    String?
}

model UserPrivacy {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique @map("user_id")

  // Privacy settings
  email    Boolean @default(true)
  age      Boolean @default(true)
  sex      Boolean @default(true)
  phone    Boolean @default(true)
  location Boolean @default(true)

  @@index([userId])
}

model UserExperience {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  title       String
  description String?
  startDate   DateTime  @map("start_date")
  endDate     DateTime? @map("end_date")
  current     Boolean   @default(false)
  visible     Boolean   @default(true)

  @@index([userId])
}

model Skill {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  approved    Boolean @default(false)
  type        Int
  // Type: 0 - Soft | 1 - Hard | 2 - Language
}
